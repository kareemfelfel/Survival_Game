import java.awt.*;
import java.awt.image.BufferedImage;

/****************************************************************
 * gameObjects.Player -- The player object in the game
 */
public class gameObjects.Player extends gameObjects.GameObject{
    private String playerName;  //The name of the player
    private int playerHealth; //The current player's health
    public static final int PLAYER_SPEED = 5;
    public final static int PLAYER_HEALTH = 10;
    public final static int TILE_SIZE = 32;


    private int subImageX, subImageY;
    private BufferedImage spriteSheet;




    private rectangles.BoundingRectangle collisionBox;
    //Set the player's name to what was passed into the constructor
    //Set the player's health
    public gameObjects.Player(String spriteFileName, int pWidth, int pHeight)
    {

        subImageX=0;
        subImageY=0;
        //Load the image for theplayer
        loadSprite(spriteFileName);
        spriteSheet = sprite;
       // playerName = pPlayerName;
        //Set the player's health to that of the constant
        //in the game manager
        playerHealth = PLAYER_HEALTH;
        //gameObjects.Player always starts out in the same position
        //Left center of the screen.
        xPos = pWidth/2;
        yPos = pHeight-sprite.getHeight();


        visible = true;

    }

    public void UpdateCollisionBoxPosition()
    {

        collisionBox.updateBoundingBox(this.xPos, this.yPos);

    }
    /***********************************************
     *
     * Overrriden function to force the player and other
     * objects to draw themselves on the screen
     * Have to pass in the graphics object associated with
     * the screen
     */
    public void draw(Graphics g) {
        getSubSprite();
        collisionBox = new rectangles.BoundingRectangle(xPos, yPos, sprite.getWidth(), sprite.getHeight());
       // System.out.println("drawing gameObjects.Player");
        g.drawImage(this.sprite, xPos, yPos, null);
        collisionBox.draw(g);
    }
    public Rectangle getCollisionBox() {

        return collisionBox.getBoundingBox();
    }

    public  void getSubSprite()
    {
        sprite = spriteSheet.getSubimage(subImageX*TILE_SIZE, subImageY*TILE_SIZE, TILE_SIZE, TILE_SIZE);
    }

    //Accessors and Mutators
    public int getSubImageX() {
        return subImageX;
    }

    public void setSubImageX(int subImageX) {
        this.subImageX = subImageX;
    }

    public int getSubImageY() {
        return subImageY;
    }

    public void setSubImageY(int subImageY) {
        this.subImageY = subImageY;
    }

}